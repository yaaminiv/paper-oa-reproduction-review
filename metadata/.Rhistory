par(mar = c(5, 6, 3, 1), oma = c(0, 1, 0, 0)) #Change margins
plot(yearPublished$totCnidarian, type = "l", ylim = c(0,45),
col = yearColors[1], lwd = 3,
xaxt = "n", yaxt = "n",
xlab = "", ylab = "",
xaxs = "i", yaxs = "i") #Plot a line graph with no axes or axis labels
lines(yearPublished$totEchinoderm, col = yearColors[3], lwd = 3) #Add echinoderm information
lines(yearPublished$totMollusc, col = yearColors[4], lwd = 3) #Add mollusc information
lines(yearPublished$totCrustacean, col = yearColors[2], lwd = 3) #Add crustacean information
#Remove black box around plot
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
axis(side = 1, at = 1:17, labels = yearPublished$Year, las = 2, col = "grey80", cex.axis = 2) #Add an x-axis with year information
axis(side = 2, at = seq(0, 40, 10), labels = seq(0, 40, 10), las = 2, col = "grey80", cex.axis = 2) #Add y-axis with paper count information
mtext("Cumulative Publications", side = 2, line = 4.5, cex = 2) #Add a y-axis label
legend("topleft",
cex = 1.5,
c("Cnidarian", "Crustacean", "Echinoderm", "Mollusc"),
lty = rep(1, times = 4), lwd = 3,
col = yearColors,
bty = "n")
dev.off()
locationData <- read.csv("Location-Data.csv", header = TRUE) #Import data
tail(locationData) #Confirm import
locationData <- dcast(locationData, Location + Lat + Long ~ Taxa, value.var = "Count") #Reformat data such that all taxa counts are in separate columns
locationData$Region <- seq(1:length(locationData$Location)) #Add numeric region information
head(locationData) #Confirm reformatting
scatterpieData <- locationData[,c(3, 2, 8, 4, 6, 7, 5)] #Reorganize columns and subset data needed for pie chart
scatterpieData$Region <- as.factor(scatterpieData$Region) #Make sure everything region is a factor
scatterpieData$Radius <- (rowSums(x = scatterpieData[,4:7])) #Scale pie radius based on number of observations for each region
scatterpieData[which(between(scatterpieData$Radius, 1, 5)),8] <- 5 #Replace any non-zero radius less than 5 with 5 so the radius shows up
head(scatterpieData) #Confirm subset
pieColors <- RColorBrewer::brewer.pal(4, "RdBu") #Create a red-blue palette with 4 colors to represent positive, neutral, and negative effects of ocean acidification on reproductive processes
#Create base plot to see what pies look like
ggplot() + geom_scatterpie(aes(x = Long, y = Lat, group = Region, r = Radius), data = scatterpieData, cols = colnames(scatterpieData[,4:7]), alpha = 0.8) + coord_equal() + scale_fill_manual(values = pieColors[1:4])
pdf("Location-Data-Map-Plot.pdf", height = 4.25, width = 11)
world <- map_data('world') #Save worldwide map data
p <- ggplot(world, aes(long, lat)) + #Plot latitude and longitude of world data and save as an object
geom_map(map=world, aes(map_id=region), fill= "lightgray", color="white") + #Separate regions. Land is grey and oceans are white
coord_quickmap() + #Quick coordinate system
theme(panel.background = element_rect(fill = "transparent"), #Remove grey background
axis.title = element_blank(), #Remove axis labels
axis.text = element_blank(), #Remove axis text
axis.ticks = element_blank(), #Remove tick marks
legend.key.size = unit(1.5, "line"), #Change legend size
legend.text = element_text(size = 15)) #Change legend text size
p + #Plot the map object
geom_scatterpie(aes(x = Long, y = Lat, group = Region, r = Radius), data = scatterpieData, cols = colnames(scatterpieData[,4:7]), alpha = 0.8) + #Add pie charts on top with location data. Include legend labels
scale_fill_manual(values = pieColors[1:4], name = "", ) #Specify legend and pie chart colors and legend title
dev.off()
knitr::opts_chunk$set(echo = TRUE)
yearPublished <- read.csv("Year-Published.csv", header = TRUE) #Import data
head(yearPublished) #Confirm import
knitr::opts_chunk$set(echo = TRUE)
#Install packages
#install.packages("RColorBrewer") #Create color palettes
#install.packages("dichromat") #Color-blind simulation
#install.packages("dplyr") #Data manipulation
#install.packages("reshape2") #Melt and cast data frames
#install.packages("ggplot2") #Plotting
#install.packages("scatterpie") #Pie chart map
#Load packages
require(RColorBrewer)
require(dichromat)
require(dplyr)
require(reshape2)
require(ggplot2)
require(scatterpie)
sessionInfo()
findingSummary <- read.csv("Reproduction-Category.csv") #Import data
findingSummary <- findingSummary[,c(1, 2, 5, 3, 4, 6)]
head(findingSummary) #Confirm import
#Create data subsets for each reproduction category
matingBehavior <- subset(findingSummary, subset = findingSummary$Category == "Mating Behavior")
fertilization <- subset(findingSummary, subset = findingSummary$Category == "Fertilization")
gametogenesis <- subset(findingSummary, subset = findingSummary$Category == "Gametogenesis")
resourceAllocation <- subset(findingSummary, subset = findingSummary$Category == "Resource Allocation")
timing <- subset(findingSummary, subset = findingSummary$Category == "Reproductive Timing and Synchronization")
sexDetermination <- subset(findingSummary, subset = findingSummary$Category == "Sex Determination")
head(sexDetermination) #Examine one subset dataset
#Make type row namee, then remove category and type columns
rownames(matingBehavior) <- matingBehavior[,6]
matingBehavior <- matingBehavior[,-c(1,6)]
rownames(fertilization) <- fertilization[,6]
fertilization <- fertilization[,-c(1,6)]
rownames(gametogenesis) <- gametogenesis[,6]
gametogenesis <- gametogenesis[,-c(1,6)]
rownames(resourceAllocation) <- resourceAllocation[,6]
resourceAllocation <- resourceAllocation[,-c(1,6)]
rownames(timing) <- timing[,6]
timing <- timing[,-c(1,6)]
rownames(sexDetermination) <- sexDetermination[,6]
sexDetermination <- sexDetermination[,-c(1,6)]
head(matingBehavior) #Confirm changes
barplotColors <- rev(RColorBrewer::brewer.pal(3, "RdBu")) #Create a red-blue palette with 3 colors to represent positive, neutral, and negative effects of ocean acidification on reproductive processes
barplot(t(t(sexDetermination)), col = barplotColors) #Examine color combinations. Red is negative, grey is neutral, blue is positive
barplot(t(t(sexDetermination)), col = dichromat(barplotColors)) #Examine color combinations with simulated color-blindness.
barplot(t(t(sexDetermination)),
axes = FALSE,
cex.names = 1.5,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,4), las = 2, col = "grey80", cex = 1.2) #Add y-axis
mtext(side = 2, "Number of Findings", line = 2, cex = 1.5) #Add y-axis label
barplot(t(t(gametogenesis)),
axes = FALSE,
cex.names = 1.5,
space = 0.1,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,9), las = 2, col = "grey80", cex = 1.2) #Add y-axis
mtext(side = 2, "Number of Findings", line = 2, cex = 1.5) #Add y-axis label
barplot(t(t(resourceAllocation)),
axes = FALSE,
ylim = c(0,19),
cex.names = 1.5,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,19), las = 2, col = "grey80", cex = 1.2) #Add y-axis
mtext(side = 2, "Number of Findings", line = 2, cex = 1.5) #Add y-axis label
barplot(t(t(timing)),
axes = FALSE,
cex.names = 1.5,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,2), las = 2, col = "grey80", cex = 1.2) #Add y-axis
mtext(side = 2, "Number of Findings", line = 2, cex = 1.5) #Add y-axis label
barplot(t(t(matingBehavior)),
axes = FALSE,
cex.names = 1.5,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,2), las = 2, col = "grey80", cex = 1.2) #Add y-axis
mtext(side = 2, "Number of Findings", line = 2, cex = 1.5) #Add y-axis label
barplot(t(t(fertilization)),
axes = FALSE,
cex.names = 1.5,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,36), las = 2, col = "grey80", cex = 1.2) #Add y-axis
mtext(side = 2, "Number of Findings", line = 2, cex = 1.5) #Add y-axis label
pdf("Reproduction-Category-Summary-Barplots.pdf", height = 8.5, width = 11)
par(mfrow = c(3,2), oma = c(1, 5, 2, 0), mar = c(3, 3, 0, 0))
barplot(t(t(sexDetermination)),
axes = FALSE, axisnames = FALSE,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,4), las = 2, col = "grey80", cex.axis = 3) #Add y-axis
mtext(side = 2, "Number of Findings", line = 2, cex = 2, outer = TRUE) #Add outer y-axis label
mtext(side = 3, " Sex Determination", adj = 0, line = -1, cex = 2) #Add category name
legend(x = 0.05, y = 2.8,
legend = c("Positive", "Neutral", "Negative"), cex = 2.3,
pch = 22, pt.cex = 4.5,
col = "black",
pt.bg = barplotColors,
bty = "n") #Add legend
barplot(t(t(gametogenesis)),
axes = FALSE, axisnames = FALSE,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,9), las = 2, col = "grey80", cex.axis = 3) #Add y-axis
mtext(side = 3, " Gametogenesis", adj = 0, line = -1, cex = 2) #Add category name
barplot(t(t(resourceAllocation)),
axes = FALSE, axisnames = FALSE,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,19), las = 2, col = "grey80", cex.axis = 3) #Add y-axis
mtext(side = 3, " Allocation", adj = 0, line = -1, cex = 2) #Add category name
barplot(t(t(timing)),
axes = FALSE, axisnames = FALSE,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,2), las = 2, col = "grey80", cex.axis = 3) #Add y-axis
mtext(side = 3, " Timing", adj = 0, line = -1, cex = 2) #Add category name
barplot(t(t(matingBehavior)),
axes = FALSE,
names.arg = c("N", "C", "E", "M"), cex.names = 2.5,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,2), las = 2, col = "grey80", cex.axis = 3) #Add y-axis
mtext(side = 3, " Mating", adj = 0, line = -1, cex = 2) #Add category name
barplot(t(t(fertilization)),
axes = FALSE,
names.arg = c("N", "C", "E", "M"), cex.names = 2.5,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,38), las = 2, col = "grey80", cex.axis = 3) #Add y-axis
mtext(side = 3, " Fertilization", adj = 0, line = -1, cex = 2) #Add category name
dev.off()
yearColors <- RColorBrewer::brewer.pal(4, "RdBu") #Create a red-blue palette with 4 colors to represent each taxa
#Add simulated color-blindness. Will need to change line type for addtional contrast
plot(yearPublished$totCnidarian, type = "l", col = dichromat(yearColors[1]), ylim = c(0,45), lty = 4, lwd = 3)
lines(yearPublished$totEchinoderm, col = dichromat(yearColors[2]), lwd = 3)
lines(yearPublished$totMollusc, col = dichromat(yearColors[3]), lty = 4, lwd = 3)
lines(yearPublished$totCrustacean, col = dichromat(yearColors[4]), lwd = 3)
tail(yearPublished) #Confirm import
yearPublished <- read.csv("Year-Published.csv", header = TRUE) #Import data
tail(yearPublished) #Confirm import
head(yearPublished) #Confirm import
yearPublished <- read.csv("Year-Published.csv", header = TRUE) #Import data
yearPublished <- yearPublished[-1,] #Remove 1924 data
head(yearPublished) #Confirm import
tail(yearPublished) #Confirm import
pdf("Year-Published-Summary-Line-Plots.pdf", height = 4.25, width = 11)
par(mar = c(5, 6, 3, 1), oma = c(0, 1, 0, 0)) #Change margins
plot(yearPublished$totCnidarian, type = "l", ylim = c(0,45),
col = yearColors[1], lwd = 3,
xaxt = "n", yaxt = "n",
xlab = "", ylab = "",
xaxs = "i", yaxs = "i") #Plot a line graph with no axes or axis labels
lines(yearPublished$totEchinoderm, col = yearColors[3], lwd = 3) #Add echinoderm information
lines(yearPublished$totMollusc, col = yearColors[4], lwd = 3) #Add mollusc information
lines(yearPublished$totCrustacean, col = yearColors[2], lwd = 3) #Add crustacean information
#Remove black box around plot
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
axis(side = 1, at = 1:17, labels = yearPublished$Year, las = 2, col = "grey80", cex.axis = 2) #Add an x-axis with year information
axis(side = 2, at = seq(0, 40, 10), labels = seq(0, 40, 10), las = 2, col = "grey80", cex.axis = 2) #Add y-axis with paper count information
mtext("Cumulative Publications", side = 2, line = 4.5, cex = 2) #Add a y-axis label
legend("topleft",
cex = 1.5,
c("Cnidarian", "Crustacean", "Echinoderm", "Mollusc"),
lty = rep(1, times = 4), lwd = 3,
col = yearColors,
bty = "n")
dev.off()
barplot(t(t(resourceAllocation)),
axes = FALSE,
ylim = c(0,18),
cex.names = 1.5,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,19), las = 2, col = "grey80", cex = 1.2) #Add y-axis
mtext(side = 2, "Number of Findings", line = 2, cex = 1.5) #Add y-axis label
barplot(t(t(resourceAllocation)),
axes = FALSE,
ylim = c(0,18),
cex.names = 1.5,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,18), las = 2, col = "grey80", cex = 1.2) #Add y-axis
mtext(side = 2, "Number of Findings", line = 2, cex = 1.5) #Add y-axis label
pdf("Reproduction-Category-Summary-Barplots.pdf", height = 8.5, width = 11)
par(mfrow = c(3,2), oma = c(1, 5, 2, 0), mar = c(3, 3, 0, 0))
barplot(t(t(sexDetermination)),
axes = FALSE, axisnames = FALSE,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,4), las = 2, col = "grey80", cex.axis = 3) #Add y-axis
mtext(side = 2, "Number of Findings", line = 2, cex = 2, outer = TRUE) #Add outer y-axis label
mtext(side = 3, " Sex Determination", adj = 0, line = -1, cex = 2) #Add category name
legend(x = 0.05, y = 2.8,
legend = c("Positive", "Neutral", "Negative"), cex = 2.3,
pch = 22, pt.cex = 4.5,
col = "black",
pt.bg = barplotColors,
bty = "n") #Add legend
barplot(t(t(gametogenesis)),
axes = FALSE, axisnames = FALSE,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,9), las = 2, col = "grey80", cex.axis = 3) #Add y-axis
mtext(side = 3, " Gametogenesis", adj = 0, line = -1, cex = 2) #Add category name
barplot(t(t(resourceAllocation)),
axes = FALSE, axisnames = FALSE,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,18), las = 2, col = "grey80", cex.axis = 3) #Add y-axis
mtext(side = 3, " Allocation", adj = 0, line = -1, cex = 2) #Add category name
barplot(t(t(timing)),
axes = FALSE, axisnames = FALSE,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,2), las = 2, col = "grey80", cex.axis = 3) #Add y-axis
mtext(side = 3, " Timing", adj = 0, line = -1, cex = 2) #Add category name
barplot(t(t(matingBehavior)),
axes = FALSE,
names.arg = c("N", "C", "E", "M"), cex.names = 2.5,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,2), las = 2, col = "grey80", cex.axis = 3) #Add y-axis
mtext(side = 3, " Mating", adj = 0, line = -1, cex = 2) #Add category name
barplot(t(t(fertilization)),
axes = FALSE,
names.arg = c("N", "C", "E", "M"), cex.names = 2.5,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,38), las = 2, col = "grey80", cex.axis = 3) #Add y-axis
mtext(side = 3, " Fertilization", adj = 0, line = -1, cex = 2) #Add category name
dev.off()
knitr::opts_chunk$set(echo = TRUE)
#Install packages
#install.packages("RColorBrewer") #Create color palettes
#install.packages("dichromat") #Color-blind simulation
#install.packages("dplyr") #Data manipulation
#install.packages("reshape2") #Melt and cast data frames
#install.packages("ggplot2") #Plotting
#install.packages("scatterpie") #Pie chart map
#Load packages
require(RColorBrewer)
require(dichromat)
require(dplyr)
require(reshape2)
require(ggplot2)
require(scatterpie)
sessionInfo()
findingSummary <- read.csv("Reproduction-Category.csv") #Import data
findingSummary <- findingSummary[,c(1, 2, 5, 3, 4, 6)]
head(findingSummary) #Confirm import
#Create data subsets for each reproduction category
matingBehavior <- subset(findingSummary, subset = findingSummary$Category == "Mating Behavior")
fertilization <- subset(findingSummary, subset = findingSummary$Category == "Fertilization")
gametogenesis <- subset(findingSummary, subset = findingSummary$Category == "Gametogenesis")
resourceAllocation <- subset(findingSummary, subset = findingSummary$Category == "Resource Allocation")
timing <- subset(findingSummary, subset = findingSummary$Category == "Reproductive Timing and Synchronization")
sexDetermination <- subset(findingSummary, subset = findingSummary$Category == "Sex Determination")
head(sexDetermination) #Examine one subset dataset
#Make type row namee, then remove category and type columns
rownames(matingBehavior) <- matingBehavior[,6]
matingBehavior <- matingBehavior[,-c(1,6)]
rownames(fertilization) <- fertilization[,6]
fertilization <- fertilization[,-c(1,6)]
rownames(gametogenesis) <- gametogenesis[,6]
gametogenesis <- gametogenesis[,-c(1,6)]
rownames(resourceAllocation) <- resourceAllocation[,6]
resourceAllocation <- resourceAllocation[,-c(1,6)]
rownames(timing) <- timing[,6]
timing <- timing[,-c(1,6)]
rownames(sexDetermination) <- sexDetermination[,6]
sexDetermination <- sexDetermination[,-c(1,6)]
head(matingBehavior) #Confirm changes
barplotColors <- rev(RColorBrewer::brewer.pal(3, "RdBu")) #Create a red-blue palette with 3 colors to represent positive, neutral, and negative effects of ocean acidification on reproductive processes
barplot(t(t(sexDetermination)), col = barplotColors) #Examine color combinations. Red is negative, grey is neutral, blue is positive
barplot(t(t(sexDetermination)), col = dichromat(barplotColors)) #Examine color combinations with simulated color-blindness.
barplot(t(t(sexDetermination)),
axes = FALSE,
cex.names = 1.5,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,4), las = 2, col = "grey80", cex = 1.2) #Add y-axis
mtext(side = 2, "Number of Findings", line = 2, cex = 1.5) #Add y-axis label
barplot(t(t(gametogenesis)),
axes = FALSE,
cex.names = 1.5,
space = 0.1,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,9), las = 2, col = "grey80", cex = 1.2) #Add y-axis
mtext(side = 2, "Number of Findings", line = 2, cex = 1.5) #Add y-axis label
barplot(t(t(resourceAllocation)),
axes = FALSE,
ylim = c(0,18),
cex.names = 1.5,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,18), las = 2, col = "grey80", cex = 1.2) #Add y-axis
mtext(side = 2, "Number of Findings", line = 2, cex = 1.5) #Add y-axis label
barplot(t(t(timing)),
axes = FALSE,
cex.names = 1.5,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,2), las = 2, col = "grey80", cex = 1.2) #Add y-axis
mtext(side = 2, "Number of Findings", line = 2, cex = 1.5) #Add y-axis label
barplot(t(t(matingBehavior)),
axes = FALSE,
cex.names = 1.5,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,2), las = 2, col = "grey80", cex = 1.2) #Add y-axis
mtext(side = 2, "Number of Findings", line = 2, cex = 1.5) #Add y-axis label
barplot(t(t(fertilization)),
axes = FALSE,
cex.names = 1.5,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,36), las = 2, col = "grey80", cex = 1.2) #Add y-axis
mtext(side = 2, "Number of Findings", line = 2, cex = 1.5) #Add y-axis label
pdf("Reproduction-Category-Summary-Barplots.pdf", height = 8.5, width = 11)
par(mfrow = c(3,2), oma = c(1, 5, 2, 0), mar = c(3, 3, 0, 0))
barplot(t(t(sexDetermination)),
axes = FALSE, axisnames = FALSE,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,4), las = 2, col = "grey80", cex.axis = 3) #Add y-axis
mtext(side = 2, "Number of Findings", line = 2, cex = 2, outer = TRUE) #Add outer y-axis label
mtext(side = 3, " Sex Determination", adj = 0, line = -1, cex = 2) #Add category name
mtext(side = 3, expression(italic("  3 studies")), adj = 0, line = -2.5, cex = 1) #Add total studies
legend(x = 0.05, y = 2.8,
legend = c("Positive", "Neutral", "Negative"), cex = 2.3,
pch = 22, pt.cex = 4.5,
col = "black",
pt.bg = barplotColors,
bty = "n") #Add legend
barplot(t(t(gametogenesis)),
axes = FALSE, axisnames = FALSE,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,9), las = 2, col = "grey80", cex.axis = 3) #Add y-axis
mtext(side = 3, " Gametogenesis", adj = 0, line = -1, cex = 2) #Add category name
mtext(side = 3, expression(italic("  26 studies")), adj = 0, line = -2.5, cex = 1) #Add total studies
barplot(t(t(resourceAllocation)),
axes = FALSE, axisnames = FALSE,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,18), las = 2, col = "grey80", cex.axis = 3) #Add y-axis
mtext(side = 3, " Allocation", adj = 0, line = -1, cex = 2) #Add category name
mtext(side = 3, expression(italic("  27 studies")), adj = 0, line = -2.5, cex = 1) #Add total studies
barplot(t(t(timing)),
axes = FALSE, axisnames = FALSE,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,2), las = 2, col = "grey80", cex.axis = 3) #Add y-axis
mtext(side = 3, " Timing", adj = 0, line = -1, cex = 2) #Add category name
mtext(side = 3, expression(italic("  5 studies")), adj = 0, line = -2.5, cex = 1) #Add total studies
barplot(t(t(matingBehavior)),
axes = FALSE,
names.arg = c("N", "C", "E", "M"), cex.names = 2.5,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,2), las = 2, col = "grey80", cex.axis = 3) #Add y-axis
mtext(side = 3, " Mating", adj = 0, line = -1, cex = 2) #Add category name
mtext(side = 3, expression(italic("  3 studies")), adj = 0, line = -2.5, cex = 1) #Add total studies
barplot(t(t(fertilization)),
axes = FALSE,
names.arg = c("N", "C", "E", "M"), cex.names = 2.5,
col = barplotColors) #Create a stacked barplot using colors in barplotColors. Do not plot any axes and increase font size of x-axis labels
axis(side = 2, at = c(0,38), las = 2, col = "grey80", cex.axis = 3) #Add y-axis
mtext(side = 3, " Fertilization", adj = 0, line = -1, cex = 2) #Add category name
mtext(side = 3, expression(italic("  57 studies")), adj = 0, line = -2.5, cex = 1) #Add total studies
dev.off()
yearPublished <- read.csv("Year-Published.csv", header = TRUE) #Import data
yearPublished <- yearPublished[-1,] #Remove 1924 data
head(yearPublished) #Confirm import
yearColors <- RColorBrewer::brewer.pal(4, "RdBu") #Create a red-blue palette with 4 colors to represent each taxa
#Add simulated color-blindness. Will need to change line type for addtional contrast
plot(yearPublished$totCnidarian, type = "l", col = dichromat(yearColors[1]), ylim = c(0,45), lty = 4, lwd = 3)
lines(yearPublished$totEchinoderm, col = dichromat(yearColors[2]), lwd = 3)
lines(yearPublished$totMollusc, col = dichromat(yearColors[3]), lty = 4, lwd = 3)
lines(yearPublished$totCrustacean, col = dichromat(yearColors[4]), lwd = 3)
pdf("Year-Published-Summary-Line-Plots.pdf", height = 4.25, width = 11)
par(mar = c(5, 6, 3, 1), oma = c(0, 1, 0, 0)) #Change margins
plot(yearPublished$totCnidarian, type = "l", ylim = c(0,45),
col = yearColors[1], lwd = 3,
xaxt = "n", yaxt = "n",
xlab = "", ylab = "",
xaxs = "i", yaxs = "i") #Plot a line graph with no axes or axis labels
lines(yearPublished$totEchinoderm, col = yearColors[3], lwd = 3) #Add echinoderm information
lines(yearPublished$totMollusc, col = yearColors[4], lwd = 3) #Add mollusc information
lines(yearPublished$totCrustacean, col = yearColors[2], lwd = 3) #Add crustacean information
#Remove black box around plot
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
box(col = "white")
axis(side = 1, at = 1:17, labels = yearPublished$Year, las = 2, col = "grey80", cex.axis = 2) #Add an x-axis with year information
axis(side = 2, at = seq(0, 40, 10), labels = seq(0, 40, 10), las = 2, col = "grey80", cex.axis = 2) #Add y-axis with paper count information
mtext("Cumulative Publications", side = 2, line = 4.5, cex = 2) #Add a y-axis label
legend("topleft",
cex = 1.5,
c("Cnidarian", "Crustacean", "Echinoderm", "Mollusc"),
lty = rep(1, times = 4), lwd = 3,
col = yearColors,
bty = "n")
dev.off()
locationData <- read.csv("Location-Data.csv", header = TRUE) #Import data
tail(locationData) #Confirm import
locationData <- dcast(locationData, Location + Lat + Long ~ Taxa, value.var = "Count") #Reformat data such that all taxa counts are in separate columns
locationData$Region <- seq(1:length(locationData$Location)) #Add numeric region information
head(locationData) #Confirm reformatting
scatterpieData <- locationData[,c(3, 2, 8, 4, 6, 7, 5)] #Reorganize columns and subset data needed for pie chart
scatterpieData$Region <- as.factor(scatterpieData$Region) #Make sure everything region is a factor
scatterpieData$Radius <- (rowSums(x = scatterpieData[,4:7])) #Scale pie radius based on number of observations for each region
scatterpieData[which(between(scatterpieData$Radius, 1, 5)),8] <- 5 #Replace any non-zero radius less than 5 with 5 so the radius shows up
head(scatterpieData) #Confirm subset
locationData <- read.csv("Location-Data.csv", header = TRUE) #Import data
tail(locationData) #Confirm import
locationData <- dcast(locationData, Location + Lat + Long ~ Taxa, value.var = "Count") #Reformat data such that all taxa counts are in separate columns
locationData$Region <- seq(1:length(locationData$Location)) #Add numeric region information
head(locationData) #Confirm reformatting
scatterpieData <- locationData[,c(3, 2, 8, 4, 6, 7, 5)] #Reorganize columns and subset data needed for pie chart
scatterpieData$Region <- as.factor(scatterpieData$Region) #Make sure everything region is a factor
scatterpieData$Radius <- (rowSums(x = scatterpieData[,4:7])) #Scale pie radius based on number of observations for each region
scatterpieData[which(between(scatterpieData$Radius, 1, 5)),8] <- 5 #Replace any non-zero radius less than 5 with 5 so the radius shows up
head(scatterpieData) #Confirm subset
pieColors <- RColorBrewer::brewer.pal(4, "RdBu") #Create a red-blue palette with 4 colors to represent positive, neutral, and negative effects of ocean acidification on reproductive processes
#Create base plot to see what pies look like
ggplot() + geom_scatterpie(aes(x = Long, y = Lat, group = Region, r = Radius), data = scatterpieData, cols = colnames(scatterpieData[,4:7]), alpha = 0.8) + coord_equal() + scale_fill_manual(values = pieColors[1:4])
pdf("Location-Data-Map-Plot.pdf", height = 4.25, width = 11)
world <- map_data('world') #Save worldwide map data
p <- ggplot(world, aes(long, lat)) + #Plot latitude and longitude of world data and save as an object
geom_map(map=world, aes(map_id=region), fill= "lightgray", color="white") + #Separate regions. Land is grey and oceans are white
coord_quickmap() + #Quick coordinate system
theme(panel.background = element_rect(fill = "transparent"), #Remove grey background
axis.title = element_blank(), #Remove axis labels
axis.text = element_blank(), #Remove axis text
axis.ticks = element_blank(), #Remove tick marks
legend.key.size = unit(1.5, "line"), #Change legend size
legend.text = element_text(size = 15)) #Change legend text size
p + #Plot the map object
geom_scatterpie(aes(x = Long, y = Lat, group = Region, r = Radius), data = scatterpieData, cols = colnames(scatterpieData[,4:7]), alpha = 0.8) + #Add pie charts on top with location data. Include legend labels
scale_fill_manual(values = pieColors[1:4], name = "", ) #Specify legend and pie chart colors and legend title
dev.off()
